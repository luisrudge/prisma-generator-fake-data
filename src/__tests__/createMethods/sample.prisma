datasource db {
  provider = "postgresql"
  url      = env("PGSQL_URL")
}

model User {
  id                     String        @id @default(cuid())
  email                  String
  name                   String
  ///FAKE:faker.company.name()
  companyName            String
  age                    Int
  firstName              String
  lastName               String
  string                 String
  stringWithDefault      String        @default("default")
  nullableString         String?
  boolean                Boolean
  booleanWithDefault     Boolean       @default(true)
  nullableBoolean        Boolean?
  int                    Int
  intWithDefault         Int           @default(1)
  nullableInt            Int?
  bigInt                 BigInt
  bigIntWithDefault      BigInt        @default(1)
  nullableBigInt         BigInt?
  float                  Float
  floatWithDefault       Float         @default(1.1)
  nullableFloat          Float?
  decimal                Decimal
  decimalWithDefault     Decimal       @default(1.23)
  nullableDecimal        Decimal?
  dateTime               DateTime
  dateTimeWithDefault    DateTime      @default(now())
  nullableDateTime       DateTime?
  stringArray            String[]
  intArray               Int[]
  bigIntArray            BigInt[]
  floatArray             Float[]
  booleanArray           Boolean[]
  dateTimeArray          DateTime[]
  ///anotherComment
  ///FAKE:{test: faker.lorem.word()}
  json                   Json
  jsonWithDefault        Json          @default("{}")
  ///FAKE:{test2: faker.lorem.word()}
  jsonWithDefaultAndFake Json          @default("{}")
  nullableJson           Json?
  enum                   Enum
  enumWithDefault        Enum          @default(A)
  nullableEnum           Enum?
  relation               UserRelation? @relation(name: "UserRelationToUser1")
  relation2              UserRelation? @relation(name: "UserRelationToUser2")
  enums                  Enum[]
  enumsWithDefault       Enum[]        @default([A, B])
}

model User2 {
  id            Int            @id @default(autoincrement())
  User2Relation User2Relation?
}

enum Enum {
  A
  B
  C
}

model UserRelation {
  id      String @id @default(cuid())
  userId  String @unique
  user    User   @relation(fields: [userId], references: [id], name: "UserRelationToUser1")
  userId2 String @unique
  user2   User   @relation(fields: [userId2], references: [id], name: "UserRelationToUser2")
}

model User2Relation {
  id String @id @default(cuid())

  user2Id Int   @unique
  user    User2 @relation(fields: [user2Id], references: [id])
}
